{"version":3,"sources":["webpack:///webpack/bootstrap 4449cd7bc8f7e51933e8","webpack:///./src/index.js","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///./src/service.js","webpack:///external \"path\"","webpack:///external \"nedb-promise\"","webpack:///external \"cuid\""],"names":["API_PREFIX","getApiRoute","path","routePaths","todos","archived","todo","reorder","archive","unarchive","service","init","app","express","use","bodyParser","json","get","req","res","data","getAll","post","title","priority","body","create","put","id","params","options","update","todoId","previousId","console","log","listen","DEFAULT_PATH","join","__dirname","types","list","todoList","defaultLists","type","getDb","db","inMemory","dbPath","filename","autoload","TodoService","constructor","shouldInitialize","listIds","map","l","lists","find","$in","length","insert","appendTail","listId","last","findOne","nextId","listRecord","resolvedListRecord","$set","getTodoListItem","getFirstNode","updateTodoListItem","remove","record","removed","_id","updateDate","Date","item","reorder2","previousRecord","nextRecord","newRecord","previousUpdated","removedRecord","buildTodo","cuid","createDate","isComplete","updated","metadata","ids","m"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4449cd7bc8f7e51933e8","import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport TodoService from \"./service.js\";\nconst API_PREFIX = \"/api/v1\";\n\nconst getApiRoute = path => `${API_PREFIX}${path}`;\n\nconst routePaths = {\n  todos: \"/todos/\",\n  archived: \"/todos/archived/\",\n  todo: \"/todos/:id/\",\n  reorder: \"/todos/reorder/\",\n  archive: \"/todos/archive/\",\n  unarchive: \"/todos/unarchive/\"\n};\n\nconst service = new TodoService();\nservice.init();\n\nconst app = express();\napp.use(bodyParser.json());\n\napp.get(getApiRoute(routePaths.todos), async (req, res) => {\n  const data = await service.getAll();\n\n  return res.json(data);\n});\n\n// get all archived todos\napp.get(getApiRoute(routePaths.archive), async (req, res) => {\n  const data = await service.getAll(\"archive\");\n\n  return res.json(data);\n});\n\n// create a todo\napp.post(getApiRoute(routePaths.todos), async (req, res) => {\n  const { title, priority } = req.body;\n\n  const data = await service.create(title, priority);\n  return res.json(data);\n});\n\n// update a todo\napp.put(getApiRoute(routePaths.todo), async (req, res) => {\n  const { id } = req.params;\n  const options = req.body;\n\n  const data = await service.update(id, options);\n  return res.json(data);\n});\n\n// reorder a todo\napp.post(getApiRoute(routePaths.reorder), async (req, res) => {\n  const { todoId, previousId } = req.body;\n\n  console.log(todoId, previousId);\n  const data = await service.reorder(todoId, previousId);\n  return res.json(data);\n});\n\napp.post(getApiRoute(routePaths.archive), async (req, res) => {\n  const { todoId } = req.body;\n\n  const data = await service.archive(todoId);\n  return res.json(data);\n});\n\napp.post(getApiRoute(routePaths.unarchive), async (req, res) => {\n  const { todoId } = req.body;\n\n  const data = await service.unarchive(todoId);\n  return res.json(data);\n});\n\napp.listen(3001);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 3\n// module chunks = 0","import path from \"path\";\nimport Datastore from \"nedb-promise\";\nimport cuid from \"cuid\";\n\nconst DEFAULT_PATH = path.join(__dirname, \"..\", \"db\", \"dev.db\");\n\nconst types = {\n  todo: \"todo\",\n  list: \"list\",\n  todoList: \"todoList\"\n};\nconst defaultLists = [\n  { id: \"active\", type: types.list, title: \"Todos\" },\n  { id: \"archive\", type: types.list, title: \"Archive\" }\n];\n\nfunction getDb(db, inMemory, dbPath) {\n  if (db) {\n    return db;\n  }\n\n  return inMemory\n    ? new Datastore()\n    : new Datastore({ filename: dbPath, autoload: true });\n}\n\nclass TodoService {\n  constructor({ inMemory = false, dbPath = DEFAULT_PATH, db = null } = {}) {\n    this.db = getDb(db, inMemory, dbPath);\n  }\n\n  // Determines if the init function should be run based on the presence of the default lists\n  shouldInitialize = async () => {\n    const listIds = defaultLists.map(l => l.id);\n    const lists = await this.db.find({\n      type: types.list,\n      id: { $in: listIds }\n    });\n\n    return !lists.length;\n  };\n\n  // Initializes the \"datastore\" if necessary\n  init = async () => {\n    if (await this.shouldInitialize()) {\n      return await this.db.insert(defaultLists);\n    }\n\n    return null;\n  };\n\n  appendTail = async (todoId, listId = \"active\") => {\n    // find the list\n    const last = await this.db.findOne({\n      type: types.todoList,\n      listId,\n      nextId: null\n    });\n\n    const listRecord = {\n      listId,\n      todoId: todoId,\n      nextId: null,\n      type: types.todoList,\n      previousId: last ? last.todoId : null\n    };\n\n    const resolvedListRecord = await this.db.insert(listRecord);\n\n    // update the record previously set as last\n    if (last) {\n      await this.db.update(\n        { todoId: last.todoId, type: types.todoList },\n        { $set: { nextId: todoId } }\n      );\n    }\n\n    return resolvedListRecord;\n  };\n\n  getTodoListItem = async (todoId, listId = \"active\") => {\n    return await this.db.findOne({\n      type: types.todoList,\n      listId,\n      todoId: todoId\n    });\n  };\n\n  getFirstNode = async (listId = \"active\") => {\n    return await this.db.findOne({\n      type: types.todoList,\n      listId,\n      previousId: null\n    });\n  };\n\n  updateTodoListItem = async ({ todoId, listId = \"active\", options }) => {\n    await this.db.update(\n      { todoId: todoId, type: types.todoList, listId },\n      { $set: options }\n    );\n  };\n\n  remove = async (todoId, listId = \"active\") => {\n    //update record's previous / next\n    const record = await this.getTodoListItem(todoId);\n\n    if (record.nextId) {\n      await this.updateTodoListItem({\n        todoId: record.nextId,\n        options: { previousId: record.previousId }\n      });\n    }\n\n    if (record.previousId) {\n      await this.updateTodoListItem({\n        todoId: record.previousId,\n        options: { nextId: record.nextId }\n      });\n    }\n\n    const removed = await this.db.remove({ _id: record._id });\n\n    return {\n      ...record,\n      previousId: null,\n      nextId: null,\n      listId: null,\n      updateDate: new Date()\n    };\n  };\n\n  archive = async todoId => {\n    const record = await this.getTodoListItem(todoId);\n\n    const item = await this.remove(todoId);\n    return await this.db.insert({ ...item, listId: \"archive\" });\n  };\n\n  unarchive = async todoId => {\n    const record = await this.getTodoListItem(todoId, \"archive\");\n\n    const removed = this.db.remove({ _id: record._id });\n    return await this.appendTail(todoId);\n  };\n\n  reorder2 = async (todoId, previousId, listId = \"active\") => {\n    const previousRecord = previousId\n      ? await this.getTodoListItem(previousId)\n      : null;\n\n    const nextId = (previousRecord && previousRecord.nextId) || null;\n\n    const nextRecord =\n      previousId === null\n        ? await this.getFirstNode()\n        : await this.getTodoListItem(nextId);\n\n    // this is the only thing already so bail\n    if (!previousRecord && !nextRecord) {\n      return;\n    }\n\n    const newRecord = {\n      todoId: todoId,\n      nextId: nextRecord ? nextRecord.todoId : null,\n      previousId: previousRecord ? previousRecord.todoId : null\n    };\n\n    //update previous\n    const previousUpdated = previousRecord\n      ? await this.updateTodoListItem({\n          todoId: previousRecord.todoId,\n          options: { nextId: newRecord.todoId }\n        })\n      : null;\n\n    if (previousRecord) {\n      await this.updateTodoListItem({\n        todoId: previousRecord.todoId,\n        options: { nextId: newRecord.todoId }\n      });\n    }\n\n    if (nextRecord) {\n      await this.updateTodoListItem({\n        todoId: nextRecord.todoId,\n        options: { previousId: newRecord.todoId }\n      });\n    }\n\n    return await this.updateTodoListItem({\n      todoId,\n      options: newRecord\n    });\n  };\n\n  reorder = async (todoId, previousId, listId = \"active\") => {\n    const previousRecord = previousId\n      ? await this.getTodoListItem(previousId)\n      : null;\n\n    const nextId = (previousRecord && previousRecord.nextId) || null;\n\n    const nextRecord =\n      previousId === null\n        ? await this.getFirstNode()\n        : await this.getTodoListItem(nextId);\n\n    // this is the only thing already so bail\n    if (!previousRecord && !nextRecord) {\n      return;\n    }\n\n    const removedRecord = await this.remove(todoId);\n\n    const newRecord = {\n      ...removedRecord,\n      nextId: nextRecord ? nextRecord.todoId : null,\n      previousId: previousRecord ? previousRecord.todoId : null,\n      listId: \"active\",\n      updateDate: new Date()\n    };\n\n    //update previous\n    const previousUpdated = previousRecord\n      ? await this.updateTodoListItem({\n          todoId: previousRecord.todoId,\n          options: { nextId: newRecord.todoId }\n        })\n      : null;\n\n    if (previousRecord) {\n      await this.updateTodoListItem({\n        todoId: previousRecord.todoId,\n        options: { nextId: newRecord.todoId }\n      });\n    }\n\n    if (nextRecord) {\n      await this.updateTodoListItem({\n        todoId: nextRecord.todoId,\n        options: { previousId: newRecord.todoId }\n      });\n    }\n\n    return await this.db.insert(newRecord);\n  };\n\n  // builds a full todo item from title / priority\n  buildTodo = (title, priority) => {\n    return {\n      id: cuid(),\n      type: types.todo,\n      title,\n      priority,\n      createDate: new Date(),\n      updateDate: new Date(),\n      isComplete: false\n    };\n  };\n\n  create = async (title, priority) => {\n    const todo = this.buildTodo(title, priority);\n    const record = await this.db.insert(todo);\n\n    this.appendTail(todo.id);\n    return record;\n  };\n\n  update = async (todoId, options) => {\n    const updated = await this.db.update(\n      { id: todoId, type: types.todo },\n      { $set: options }\n    );\n\n    return updated;\n  };\n\n  getAll = async (listId = \"active\") => {\n    const metadata = await this.db.find({ type: types.todoList, listId });\n\n    const ids = metadata.map(m => m.todoId);\n    const todoList = await this.db.find({ id: { $in: ids } });\n\n    return { todoList, metadata };\n  };\n}\n\nexport default TodoService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/service.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"nedb-promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nedb-promise\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"cuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cuid\"\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}